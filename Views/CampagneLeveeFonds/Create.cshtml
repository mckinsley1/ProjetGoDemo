@model ProjetGo.CampagneLeveeFond

@{
    ViewBag.Title = "Create";
}

<h2>Nouvelle campagne de levée de fond</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Campagne de levée de fond</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.titreCampagneLeveeFond, "Titre", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.titreCampagneLeveeFond, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.titreCampagneLeveeFond, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.dateDebutCampagneLeveeFond, "Date début", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.dateDebutCampagneLeveeFond, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.dateDebutCampagneLeveeFond, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.dateFinCampagneLeveeFond, "Date fin", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.dateFinCampagneLeveeFond, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.dateFinCampagneLeveeFond, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.montantCibleCampagneLeveeFond, "Montant cible", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.montantCibleCampagneLeveeFond, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.montantCibleCampagneLeveeFond, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.totalRealiseCampagneLeveeFond, "Total", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.totalRealiseCampagneLeveeFond, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.totalRealiseCampagneLeveeFond, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.codeProjet, "Projet", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("codeProjet", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.codeProjet, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Créer" class="btn btn-b-n" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Retour à la liste", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
