@model ProjetGo.Projet

@{
    ViewBag.Title = "Create";
}

<h2>Nouveau projet</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Décrivez-nous votre projet</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.titreProjet, "Titre projet", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.titreProjet, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.titreProjet, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.descriptionCourteProjet, "Description", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.descriptionCourteProjet, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.descriptionCourteProjet, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.butProjet, "But", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.butProjet, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.butProjet, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.objectifProjet, "Objectif", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.objectifProjet, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.objectifProjet, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.statutProjet, "Statut", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">

                @Html.DropDownList("statutProjet",
                    new SelectList(Enum.GetValues(typeof(Statut))),
                    "Sélectionner un statut",
                    new { @class = "form-control" })

            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.beneficesEscomptees, "Bénéfices escomptées", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.beneficesEscomptees, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.beneficesEscomptees, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.dateDebutEstimeeProjet, "Date début estimée", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.dateDebutEstimeeProjet, new { @type = "date", @class = "form-control datepicker" })
                @Html.ValidationMessageFor(model => model.dateDebutEstimeeProjet)

            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.budgetProjet, "Budget", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.budgetProjet, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.budgetProjet, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.dateDebutReelleProjet, "Date début réelle", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.dateDebutReelleProjet, new { @type = "date", @class = "form-control datepicker" })
                @Html.ValidationMessageFor(model => model.dateDebutReelleProjet, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.dateFinReelleProjet, "Date fin réelle", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.dateFinReelleProjet, new { @type = "date", @class = "form-control datepicker" })
                @Html.ValidationMessageFor(model => model.dateFinReelleProjet, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.codefichier, "CodeFichier", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.codefichier, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.codefichier, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.codeProjetCompteRendu, "codeProjetCompteRendu", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("codeProjetCompteRendu", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.codeProjetCompteRendu, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Publier" class="btn btn-b-n" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Retour à la liste", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
